{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { TcPlayer } from '@/assets/js/TcPlayer-2.4.2_CK8JF548L0G0.js';\nimport JSMpeg from '@cycjimmy/jsmpeg-player';\nimport Foot from '@/components/Foot.vue'; //插件\n\nimport BetterScroll from '@better-scroll/core';\nexport default {\n  data: function data() {\n    return {\n      // selected: '工控一',\n      BetterScroll: '',\n      TbetterScroll: '',\n      player: null,\n      player2: null,\n      videoUrl: '',\n      videoUrl2: '',\n      remark: '',\n      jobName: '',\n      createAt: '',\n      createBy: '',\n      stope: true,\n      fffsd: true\n    };\n  },\n  components: {\n    Foot: Foot\n  },\n  created: function created() {\n    this.videoUrl = this.$route.query.url1;\n    this.videoUrl2 = this.$route.query.url2;\n    this.remark = this.$route.query.remark;\n    this.jobName = this.$route.query.jobName;\n    this.createAt = this.$route.query.createAt;\n    this.createBy = this.$route.query.createBy;\n  },\n  mounted: function mounted() {\n    var tsSrc = this.videoUrl;\n    var canvas = document.getElementById('videoWrapper');\n    new JSMpeg.VideoElement(canvas, tsSrc, {\n      canvas: canvas,\n      // 容器id\n      control: true,\n      autoplay: true,\n      // throttled: false, // 这里设置为false，不然不触发onSourceCompleted事件\n      // chunkSize: 4 * 1024 * 1024, // 使用分块加载数据时，一次加载的块大小。默认1024*1024(1mb)\n      // progressive: false, // 是否分块加载数据\n      loop: true,\n      // 是否循环播放视频。默认true\n      // onSourceCompleted: () => {\n      //     console.log('completed')\n      // },\n      onPlay: function onPlay() {\n        console.log('play');\n      },\n      onPause: function onPause() {\n        console.log('pause');\n      },\n      onEnded: function onEnded() {\n        console.log('end');\n      },\n      onStalled: function onStalled() {\n        console.log('没有足够的数据用于播放');\n      },\n      onSourceEstablished: function onSourceEstablished() {\n        console.log('第一次收到数据');\n      }\n    });\n    var tsSrcc = this.videoUrl2;\n    var canvass = document.getElementById(\"video-canvas\");\n    new JSMpeg.VideoElement(canvass, tsSrcc, {\n      canvas: canvass,\n      loop: true,\n      progressive: false,\n      //是否为chunk\n      control: true,\n      autoplay: true,\n      onPlay: function onPlay() {\n        console.log('play');\n      },\n      onPause: function onPause() {\n        console.log('pause');\n      },\n      onEnded: function onEnded() {\n        console.log('end');\n      },\n      onStalled: function onStalled() {\n        console.log('没有足够的数据用于播放');\n      },\n      onSourceEstablished: function onSourceEstablished() {\n        console.log('第一次收到数据');\n      }\n    } // , {\n    // \taudio: false, //静音\n    // \tonPlay: () => {\n    // \t\tconsole.log(\"789\")\n    // \t}\n    // },\n    );\n    this.TbetterScroll = this.$nextTick(function () {\n      new BetterScroll('.wrapper', {\n        movable: true,\n        zoom: true,\n        probeType: 2,\n        click: true\n      });\n    }); // this.player = new TcPlayer('video', {\n    // \t\"m3u8\": this.videoUrl, //请替换成实际可用的播放地址\n    // \t\"flv\": this.videoUrl,\n    // \t\"autoplay\" : true, //iOS下safari浏览器，以及大部分移动端浏览器是不开放视频自动播放这个能力的\n    // \t\"continuePlay\":true,  //是否连续播放\n    // }),\n    // this.player2 = new TcPlayer('video', {\n    // \t\"m3u8\": this.videoUrl2, //请替换成实际可用的播放地址\n    // \t\"flv\": this.videoUrl2,\n    // \t\"autoplay\" : true, //iOS下safari浏览器，以及大部分移动端浏览器是不开放视频自动播放这个能力的\n    // \t\"controls\":\"default\",\n    // })\n    // document.getElementsByTagName('video')[0].setAttribute(\"x5-playsinline\",\"true\")\n    // console.log(document.getElementsByTagName('video'))\n  },\n  methods: {\n    goback: function goback() {\n      this.$router.back();\n    },\n    tostope: function tostope() {\n      if (this.stope) {\n        this.stope = false;\n      } else {\n        this.stope = true;\n      }\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}