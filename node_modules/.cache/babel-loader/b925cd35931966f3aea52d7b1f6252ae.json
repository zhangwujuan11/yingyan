{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Popupp from '../Popupp.vue';\nimport http from '@/common/api/request.js';\nimport { Toast } from 'mint-ui';\nexport default {\n  inject: [\"reload\"],\n  data: function data() {\n    return {\n      popupVisible: false,\n      //添加设备表单是否显示\n      updata: false //设备是否添加成功\n      // rootForm:{\n      //   'device_ip':'',  //设备ip\n      //   // 'device_id':'',//设备\n      //   'device_account':'',//设备账号\n      //   'device_password':'',//设备密码\n      //   'org_id':Number(this.$store.state.userorgid) ,//机构id\n      //   'push_url':'',//推流直播地址\n      //   'device_type':1,//设备类型\n      //   'state':1,//状态\n      //   'device_name':'',//设备名称\n      //   \"scope\": '', \n      // },\n      // rules:{\n      // \tdevice_name:{\n      // \t\trule:/^.+$/,\n      // \t\tmsg:\"设备名称不能为空\"\n      // \t},\n      // \tdevice_ip:{\n      // \t\trule:/^((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.){3}(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])$/,\n      // \t\tmsg:\"ip地址输入错误\"\n      // \t},\n      // \t// device_id:{\n      // \t// \trule:/^.+$/,\n      // \t// \tmsg:\"设备id不能为空\"\n      // \t// },\n      // \t// device_account:{\n      // \t// \trule:/^.+$/,\n      // \t// \tmsg:\"设备账号不能为空\"\n      // \t// },\n      // \tdevice_password:{\n      // \t\trule:/^.+$/,\n      // \t\tmsg:\"设备密码不能为空\"\n      // \t},\n      // \tdevice_type:{\n      // \t\trule:/^.+$/,\n      // \t\tmsg:\"设备类型不能为空\"\n      // \t},\n      // \tdevice_id:{\n      // \t\trule:/^.+$/,\n      // \t\tmsg:\"设备id不能为空\"\n      // \t}\n      // },\n\n    };\n  },\n  props: [\"camera\", \"cam\"],\n  created: function created() {},\n  components: {\n    Popupp: Popupp\n  },\n  methods: {\n    //长按\n    gtouchstart: function gtouchstart(item) {\n      var self = this;\n      this.timeOutEvent = setTimeout(function () {\n        self.longPress(item);\n      }, 500);\n      return false;\n    },\n    //手释放，如果在500毫秒内就释放，则取消长按事件，此时可以执行onclick应该执行的事件\n    showDeleteButton: function showDeleteButton(n) {\n      // console.log(n)\n      clearTimeout(this.timeOutEvent); //清除定时器\n\n      if (this.timeOutEvent != 0) {\n        this.$parent.getCamerList();\n\n        if (n.Status == 0) {\n          // Toast(\"设备已离线\")\n          // return false\n          this.$router.push({\n            name: 'video',\n            query: {\n              'url': n\n            }\n          });\n        } else {\n          this.$router.push({\n            name: 'video',\n            query: {\n              'url': n\n            }\n          });\n        }\n      }\n\n      return false;\n    },\n    //手指移动\n    gtouchmove: function gtouchmove() {\n      clearTimeout(this.timeOutEvent); //清除定时器\n\n      this.timeOutEvent = 0;\n    },\n    longPress: function longPress(val) {\n      this.timeOutEvent = 0;\n      console.log(\"长按\");\n    } // 添加设备表单\n    // formRec(){\n    // \tthis.popupVisible=true;\n    // },\n    // 保存添加设备信息\n    // infPost(){\n    // \t// 前端验证\n    // \tif( !this.validate('device_name') ) return;\n    // \tif( !this.validate('device_ip') ) return;\n    // \tif( !this.validate('device_id') ) return;\n    // \t// if( !this.validate('device_account') ) return;\n    // \tif( !this.validate('device_password') ) return;\n    // \tif( !this.validate('device_type') ) return;\n    // \tthis.rootForm.device_id=Number(this.rootForm.device_id)\n    // \tconsole.log(this.rootForm)\n    // http.$axios({\n    // \turl:'/device',\n    // \tdata:this.rootForm\n    // }).then(res=>{\n    // \t// console.log(res)\n    // \tToast(res.data.result);\n    // \tthis.popupVisible=false;\n    // \tthis.updata=true\n    // \tthis.reload()\n    // })\n    // },\n    //验证信息提示\n    // validate( key ){\n    // \tlet bool = true;\n    // \tif( !this.rules[key].rule.test( this.rootForm[key])  ){\n    // \t\t//提示信息\n    // \t\tToast(this.rules[key].msg);\n    // \t\tbool = false;\n    // \t\treturn false;\n    // \t}\n    // \treturn bool;\n    // },\n    // 关闭蒙尘\n    // changVisible(){\n    // \tthis.popupVisible=false;\n    // },\n\n  } // watch:{\n  // popupVisible(val){\n  // \tthis.$emit('tofa',val)\n  // },\n  // updata(val){\n  // \tthis.$emit('camlist',val)\n  // },\n  // cam(val){\n  // \tthis.camlist=val\n  // }\n  // }\n\n};","map":null,"metadata":{},"sourceType":"module"}