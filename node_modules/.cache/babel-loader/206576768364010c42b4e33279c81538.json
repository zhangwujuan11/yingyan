{"ast":null,"code":"import _defineProperty from \"C:/XM/yingyan/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nvar _inject$data$props$cr;\n\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Popupp from '../Popupp.vue';\nimport http from '@/common/api/request.js';\nimport { Toast } from 'mint-ui';\nexport default (_inject$data$props$cr = {\n  inject: [\"reload\"],\n  data: function data() {\n    return {\n      popupVisible: false,\n      //添加设备表单是否显示\n      updata: false,\n      //设备是否添加成功\n      rootForm: {\n        'device_ip': '',\n        //设备ip\n        'device_id': '',\n        //设备\n        'device_account': '',\n        //设备账号\n        'device_password': '',\n        //设备密码\n        'org_id': Number(this.$store.state.userorgid),\n        //机构id\n        'push_url': '',\n        //推流直播地址\n        'device_type': 1,\n        //设备类型\n        'state': 1,\n        //状态\n        'device_name': '',\n        //设备名称\n        \"scope\": ''\n      },\n      rules: _defineProperty({\n        device_name: {\n          rule: /^.+$/,\n          msg: \"设备名称不能为空\"\n        },\n        device_ip: {\n          rule: /^((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.){3}(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])$/,\n          msg: \"ip地址输入错误\"\n        },\n        device_id: {\n          rule: /^.+$/,\n          msg: \"设备id不能为空\"\n        },\n        // device_account:{\n        // \trule:/^.+$/,\n        // \tmsg:\"设备账号不能为空\"\n        // },\n        device_password: {\n          rule: /^.+$/,\n          msg: \"设备密码不能为空\"\n        },\n        device_type: {\n          rule: /^.+$/,\n          msg: \"设备类型不能为空\"\n        }\n      }, \"device_id\", {\n        rule: /^.+$/,\n        msg: \"设备id不能为空\"\n      })\n    };\n  },\n  props: [\"camera\", \"device_types\", \"cam\"],\n  created: function created() {},\n  components: {\n    Popupp: Popupp\n  },\n  methods: {\n    //长按\n    gtouchstart: function gtouchstart(item) {\n      var self = this;\n      this.timeOutEvent = setTimeout(function () {\n        self.longPress(item);\n      }, 500);\n      return false;\n    },\n    //手释放，如果在500毫秒内就释放，则取消长按事件，此时可以执行onclick应该执行的事件\n    showDeleteButton: function showDeleteButton(n) {\n      // console.log(n)\n      clearTimeout(this.timeOutEvent); //清除定时器\n\n      if (this.timeOutEvent != 0) {\n        this.$parent.getCamerList();\n\n        if (n.Status == 0) {\n          Toast(\"设备已离线\");\n          return false;\n        } else {\n          this.$router.push({\n            name: 'video',\n            query: {\n              'url': n\n            }\n          });\n        }\n      }\n\n      return false;\n    },\n    //手指移动\n    gtouchmove: function gtouchmove() {\n      clearTimeout(this.timeOutEvent); //清除定时器\n\n      this.timeOutEvent = 0;\n    },\n    longPress: function longPress(val) {\n      this.timeOutEvent = 0;\n      console.log(\"长按\");\n    },\n    // 添加设备表单\n    formRec: function formRec() {\n      this.popupVisible = true;\n    },\n    // 保存添加设备信息\n    infPost: function infPost() {\n      var _this = this;\n\n      // 前端验证\n      if (!this.validate('device_name')) return;\n      if (!this.validate('device_ip')) return;\n      if (!this.validate('device_id')) return; // if( !this.validate('device_account') ) return;\n\n      if (!this.validate('device_password')) return;\n      if (!this.validate('device_type')) return;\n      this.rootForm.device_id = Number(this.rootForm.device_id);\n      console.log(this.rootForm);\n      http.$axios({\n        url: '/device',\n        data: this.rootForm\n      }).then(function (res) {\n        // console.log(res)\n        Toast(res.data.result);\n        _this.popupVisible = false;\n        _this.updata = true;\n\n        _this.reload();\n      });\n    },\n    //验证信息提示\n    validate: function validate(key) {\n      var bool = true;\n\n      if (!this.rules[key].rule.test(this.rootForm[key])) {\n        //提示信息\n        Toast(this.rules[key].msg);\n        bool = false;\n        return false;\n      }\n\n      return bool;\n    },\n    // 关闭蒙尘\n    changVisible: function changVisible() {\n      this.popupVisible = false;\n    }\n  }\n}, _defineProperty(_inject$data$props$cr, \"created\", function created() {}), _defineProperty(_inject$data$props$cr, \"watch\", {\n  popupVisible: function popupVisible(val) {\n    this.$emit('tofa', val);\n  },\n  updata: function updata(val) {\n    this.$emit('camlist', val);\n  },\n  cam: function cam(val) {\n    this.camlist = val;\n  }\n}), _inject$data$props$cr);","map":null,"metadata":{},"sourceType":"module"}