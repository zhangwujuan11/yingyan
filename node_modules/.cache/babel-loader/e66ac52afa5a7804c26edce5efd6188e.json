{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Popupp from '@/components/Popupp.vue';\nimport Administrtab from '@/components/Administrtab.vue';\nimport http from '@/common/api/request.js';\nimport Foot from '@/components/Foot.vue';\nimport { Toast } from 'mint-ui';\nimport BetterScroll from '@better-scroll/core';\nexport default {\n  data() {\n    return {\n      popupVisible: false,\n      //添加设备表单是否显示\n      updata: false,\n      //设备是否添加成功\n      rootForm: {\n        'device_ip': '',\n        //设备ip\n        // 'device_id':'',//设备\n        'device_account': '',\n        //设备账号\n        'device_password': '',\n        //设备密码\n        'org_id': Number(this.$store.state.userorgid),\n        //机构id\n        'push_url': '',\n        //推流直播地址\n        'device_type': 1,\n        //设备类型\n        'state': 1,\n        //状态\n        'device_name': '',\n        //设备名称\n        \"scope\": ''\n      },\n      device_type_name: [],\n      //设备类型名称\n      cameraList: [],\n      rules: {\n        device_name: {\n          rule: /^.+$/,\n          msg: \"设备名称不能为空\"\n        },\n        device_ip: {\n          rule: /^((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.){3}(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])$/,\n          msg: \"ip地址输入错误\"\n        },\n        // device_id:{\n        // \trule:/^.+$/,\n        // \tmsg:\"设备id不能为空\"\n        // },\n        // device_account:{\n        // \trule:/^.+$/,\n        // \tmsg:\"设备账号不能为空\"\n        // },\n        device_password: {\n          rule: /^.+$/,\n          msg: \"设备密码不能为空\"\n        },\n        device_type: {\n          rule: /^.+$/,\n          msg: \"设备类型不能为空\"\n        },\n        device_id: {\n          rule: /^.+$/,\n          msg: \"设备id不能为空\"\n        }\n      }\n    };\n  },\n\n  components: {\n    Popupp,\n    Administrtab,\n    Foot\n  },\n\n  created() {\n    // 获取设备列表\n    http.$axios({\n      url: 'device/getDevices',\n      method: \"GET\",\n      params: {\n        \"org_id\": this.$store.state.userorgid\n      }\n    }).then(res => {\n      this.cameraList = res.data.data;\n    });\n    this.$nextTick(() => {\n      // 获取设备类型名称\n      http.$axios({\n        url: 'https://1to2to3.cn/rds2/service/query',\n        data: {\n          \"auth\": 2,\n          \"project\": \"eagle_eye\",\n          \"table\": \"sys_device_type\",\n          \"conditions\": {\n            \"fields\": [\"device_type_name\"],\n            \"query\": {}\n          }\n        }\n      }).then(res => {\n        // console.log(res.data)\n        this.device_type_name = res.data.data;\n        new BetterScroll('.wrapper', {\n          movable: true,\n          zoom: true,\n          probeType: 2,\n          click: true\n        });\n      });\n    });\n  },\n\n  methods: {\n    // 添加设备表单\n    formRec() {\n      this.popupVisible = true;\n    },\n\n    // 保存添加设备信息\n    infPost() {\n      if (!this.validate('device_name')) return;\n      if (!this.validate('device_ip')) return;\n      if (!this.validate('device_id')) return; // if( !this.validate('device_account') ) return;\n\n      if (!this.validate('device_password')) return;\n      if (!this.validate('device_type')) return;\n      this.rootForm.device_id = Number(this.rootForm.device_id);\n      console.log(this.rootForm);\n      http.$axios({\n        url: '/device',\n        data: this.rootForm\n      }).then(res => {\n        // console.log(res)\n        Toast(res.data.result);\n        this.popupVisible = false;\n        this.updata = true;\n      });\n    },\n\n    //验证信息提示\n    validate(key) {\n      let bool = true;\n\n      if (!this.rules[key].rule.test(this.rootForm[key])) {\n        //提示信息\n        Toast(this.rules[key].msg);\n        bool = false;\n        return false;\n      }\n\n      return bool;\n    },\n\n    // 关闭蒙尘\n    changVisible() {\n      this.popupVisible = false;\n    } // 向左滑动出现删除按钮时\n    // oneself() {\n    // \tif (this.checkSlide()) {\n    // \t  this.restSlide();\n    // \t} else {\n    // \t  // 点击商品信息弹出弹框\n    // \t  console.log(\"点击当前商品触发事件...\");\n    // \t}\n    //   },\n    //    //滑动开始\n    //         touchStart(e) {\n    //           // 记录初始位置\n    //           this.startX = e.touches[0].clientX;\n    //         },\n    //         //滑动结束\n    //         touchEnd(e) {\n    //           // 当前滑动的父级元素\n    //           let parentElement = e.currentTarget.parentElement;\n    //           // 记录结束位置\n    //           this.endX = e.changedTouches[0].clientX;\n    //           // 左滑大于30距离删除出现\n    //           if (parentElement.dataset.type == 0 && this.startX - this.endX > 30) {\n    //             this.restSlide();\n    //             parentElement.dataset.type = 1;\n    //           },\n    // \t//判断当前是否有滑块处于滑动状态\n    // \t      checkSlide() {\n    // \t        let listItems = document.querySelectorAll(\".li_vessel\");\n    // \t        for (let i = 0; i < listItems.length; i++) {\n    // \t          if (listItems[i].dataset.type == 1) {\n    // \t            return true;\n    // \t          }\n    // \t        }\n    // \t        return false;\n    // \t      },\n    // \t      //复位滑动状态\n    // \t      restSlide() {\n    // \t        let listItems = document.querySelectorAll(\".li_vessel\");\n    // \t        // 复位\n    // \t        for (let i = 0; i < listItems.length; i++) {\n    // \t          listItems[i].dataset.type = 0;\n    // \t        }\n    // \t      },\n    // \t      //删除数据信息\n    // \t      remove(e) {\n    // \t        // 当前索引值\n    // \t        let index = e.currentTarget.dataset.index;\n    // \t        // 复位\n    // \t        this.restSlide();\n    // \t        // 删除数组lists中一个数据\n    // \t        this.lists.splice(index, 1);\n    // \t      },\n\n\n  }\n};","map":null,"metadata":{},"sourceType":"module"}